openapi: 3.0.0
info:
  title: api
  version: '1.0'
servers:
  - url: 'http://onedaynote.online'
paths:
  /notes:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteDtoFull'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
      operationId: get-notes
      parameters:
        - schema:
            type: string
          in: query
          name: key
        - schema:
            type: string
          in: query
          name: definition
        - schema:
            type: string
          in: query
          name: color
        - schema:
            type: string
          in: query
          name: animal
        - schema:
            type: string
          in: query
          name: action
      description: Get note
    post:
      summary: ''
      operationId: post-notes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteDtoSimple'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreate'
        description: ''
      description: Add note
  /params:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParamsDto'
      operationId: get-params
      description: Get params lists
components:
  schemas:
    NoteCreate:
      title: NoteCreate
      type: object
      x-examples:
        example-1:
          type: '0:TEXT'
          key: string
          payload: string
          extraPayload: string
          definition: string
          color: string
          animal: string
          action: string
          removable: true
          notifyEmail: string
      properties:
        type:
          type: integer
          enum:
            - '0:TEXT'
            - '1:PICTURE'
            - '2:PICTURE_WITH_TEXT'
        key:
          type: string
        payload:
          type: string
        extraPayload:
          type: string
        definition:
          type: string
        color:
          type: string
        animal:
          type: string
        action:
          type: string
        removable:
          type: boolean
        notifyEmail:
          type: string
      required:
        - type
        - key
        - payload
    NoteDtoFull:
      title: NoteDtoFull
      type: object
      properties:
        id:
          type: integer
        type:
          type: integer
          enum:
            - '0:TEXT'
            - '1:PICTURE'
            - '2:PICTURE_WITH_TEXT'
        payload:
          type: string
        extraPayload:
          type: string
        created:
          type: string
          format: date-time
      required:
        - id
        - type
        - payload
        - created
    NoteDtoSimple:
      title: NoteDtoSimple
      type: object
      x-examples:
        example-1:
          id: string
      properties:
        id:
          type: integer
        key:
          type: string
        type:
          type: integer
          enum:
            - '0:TEXT'
            - '1:PICTURE'
            - '2:PICTURE_WITH_TEXT'
        created:
          type: string
          format: date-time
      required:
        - id
        - key
        - created
    ParamsDto:
      title: ParamsDto
      type: object
      properties:
        definition:
          type: array
          items:
            type: string
        color:
          type: array
          items:
            type: string
        animal:
          type: array
          items:
            type: string
        action:
          type: array
          items:
            type: string
      required:
        - definition
        - color
        - animal
        - action
    Exception:
      title: Exception
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
        code:
          type: integer
  responses:
    '400':
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exception'
    '404':
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exception'
